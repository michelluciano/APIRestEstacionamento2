package br.com.everis.estacionamento.model;

import java.util.ArrayList;
import java.util.Collection;
import java.util.List;

import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;

import org.springframework.security.core.GrantedAuthority;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.security.core.userdetails.UserDetailsChecker;

@Entity
public class Usuario implements UserDetails {
	
	private static final long serialVersionUID = 1L;

	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	private Long idusario;
	
	private String usuarioNome;
	//private String usuarioPerfil;
	private String email;
	private String senha;
	
	private List<Perfil> perfis = new ArrayList<>();
	
	//construtor default
	public Usuario(){
		
	}
	
	// construtor para o controller
	public Usuario(String nome, String perfil) {
		this.usuarioNome = nome;
		//this.usuarioPerfil = perfil;
	}
	
	// getter and setters
	
	
	public Long getIdusario() {
		return idusario;
	}
	
	public String getEmail() {
		return email;
	}

	public String getSenha() {
		return senha;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	public void setSenha(String senha) {
		this.senha = senha;
	}

	public void setIdusario(Long idusario) {
		this.idusario = idusario;
	}
	public String getUsuarioNome() {
		return usuarioNome;
	}
	public void setUsuarioNome(String usuarioNome) {
		this.usuarioNome = usuarioNome;
	}
//	public String getUsuarioPerfil() {
//		return usuarioPerfil;
//	}
//	public void setUsuarioPerfil(String usuarioPerfil) {
//		this.usuarioPerfil = usuarioPerfil;
//	}

	@Override
	public Collection<? extends GrantedAuthority> getAuthorities() {
		return this.perfil;
	}

	@Override
	public String getPassword() {
		return this.senha;
	}

	@Override
	public String getUsername() {
		return this.email;
	}

	@Override
	public boolean isAccountNonExpired() {
		return true;
	}

	@Override
	public boolean isAccountNonLocked() {
		return true;
	}

	@Override
	public boolean isCredentialsNonExpired() {
		return true;
	}

	@Override
	public boolean isEnabled() {
		return true;
	}
}
